<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>wheresRTA</title>
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
        crossorigin=""/>
        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
        crossorigin=""></script>
        <style type="text/css">
            body { 
                margin: 0;
                padding: 0;
            }
            #map {
                width: 100vw;
                height: 100vh;
            }
        </style>
    </head>
    <body>
        <div id="map">
            <script type="module">
                import "leaflet-rotatedmarker";
                //create map
                var map = L.map('map').setView([41.4760,-81.6930], 12);

                //add the osm map layer
                L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 19,
                attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
                }).addTo(map);

                //draw the raillines
                var redlinecoords = [
                    //airport
                    [41.41115,-81.83817],
                    //park rd
                    [41.40993,-81.83523],
                    [41.40968,-81.83423],
                    [41.40962,-81.83364],
                    [41.40984,-81.83236],
                    [41.41051,-81.83156],
                    //i90 near triskett
                    [41.46755,-81.78383],
                    [41.47031,-81.78080],
                    [41.47158,-81.77888],
                    [41.47292,-81.77608],
                    //before cudell bend
                    [41.47905,-81.75980],
                    [41.47943,-81.75918],
                    [41.48059,-81.75807],
                    [41.48111,-81.75697],
                    [41.48113,-81.75602],
                    //after bend before cudell
                    [41.48084,-81.75481],
                    [41.47881,-81.74782],
                    [41.47859,-81.74682],
                    [41.47848,-81.74578],
                    //before 69th street bend
                    [41.47835,-81.73329],
                    [41.47825,-81.73228],
                    [41.47812,-81.73158],
                    //before w65th-lorain
                    [41.47763,-81.73022],
                    [41.47638,-81.72767],
                    [41.47607,-81.72669],
                    [41.47597,-81.72618],
                    //past lorain ave
                    [41.47586,-81.72492],
                    //w41st
                    [41.47581,-81.71343],
                    [41.47574,-81.70980],
                    [41.47578,-81.70904],
                    [41.47606,-81.70712],
                    [41.47639,-81.70597],
                    [41.47708,-81.70474],
                    [41.47741,-81.70441],
                    [41.47971,-81.70187],
                    [41.48015,-81.70153],
                    [41.48066,-81.70134],
                    //us42
                    [41.48142,-81.70114],
                    //french st
                    [41.49188,-81.70151],
                    [41.49374,-81.70120],
                    [41.49479,-81.70045],
                    [41.49540,-81.69974],
                    //before tower city bend
                    [41.49747,-81.69688],
                    [41.49785,-81.69599],
                    [41.49762,-81.69278],
                    //after tower city bend
                    [41.49734,-81.69200],
                    //west eagle
                    [41.49477,-81.68793],
                    [41.49384,-81.68640],
                    [41.49180,-81.68217],
                    [41.48944,-81.67702],
                    [41.48888,-81.67575],
                    [41.48856,-81.67451],
                    [41.48843,-81.67356],
                    [41.48815,-81.67004],
                    //e30th
                    [41.48802,-81.66927],
                    [41.48790,-81.66885],
                    [41.48765,-81.66820],
                    //willow freeway
                    [41.48535,-81.66363],
                    [41.48501,-81.66309],
                    [41.48325,-81.66143],
                    [41.48204,-81.65982],
                    [41.48071,-81.65780],
                    [41.48060,-81.65758],
                    [41.48044,-81.65696],
                    [41.48021,-81.65382],
                    //e55th st station
                    [41.48061,-81.65127],
                    [41.48099,-81.64891],
                    [41.48188,-81.64650],
                    [41.48395,-81.64215],
                    [41.48410,-81.64165],
                    [41.48557,-81.63612],
                    [41.48582,-81.63453],
                    [41.48614,-81.63111],
                    [41.48625,-81.63040],
                    [41.48651,-81.62954],
                    [41.48694,-81.62859],
                    //stokes blvd
                    [41.49751,-81.60837],
                    [41.49822,-81.60701],
                    [41.49881,-81.60625],
                    [41.50546,-81.60138],
                    [41.50582,-81.60112],
                    [41.50628,-81.60086],
                    [41.50687,-81.60065],
                    [41.50769,-81.60049],
                    //mayfield rd
                    [41.50866,-81.60046],
                    [41.51231,-81.60054],
                    [41.51297,-81.60046],
                    [41.51332,-81.60034],
                    [41.51397,-81.60003],
                    [41.51489,-81.59945],
                    [41.51673,-81.59824],
                    [41.51738,-81.59774],
                    //auburndale
                    [41.51842,-81.59676],
                    [41.52376,-81.59150],
                    [41.52529,-81.59020],
                    //eddy rd
                    [41.52665,-81.58897],
                    [41.52919,-81.58646],
                    [41.53053,-81.58504]
                    
                ];

                var waterfrontcoords = [
                    //waterfront portion
                    [41.50928,-81.68828],
                    [41.50691,-81.69307],
                    [41.50672,-81.69363],
                    [41.50568,-81.69585],
                    [41.50521,-81.69701],
                    [41.50474,-81.69793],
                    [41.50340,-81.70089],
                    [41.50224,-81.70386],
                    [41.50202,-81.70449],
                    [41.50200,-81.70476],
                    [41.50227,-81.70570],
                    [41.50225,-81.70600],
                    [41.50175,-81.70700],
                    [41.50159,-81.70716],
                    [41.50151,-81.70717],
                    [41.50139,-81.70717],
                    [41.50124,-81.70708],
                    [41.50112,-81.70691],
                    [41.50107,-81.70678],
                    [41.50104,-81.70658],
                    [41.50087,-81.70523],
                    [41.50081,-81.70496],
                    [41.50074,-81.70480],
                    [41.50064,-81.70464],
                    [41.50056,-81.70454],
                    //flats east bank
                    [41.49949,-81.70359],
                    [41.49883,-81.70296],
                    [41.49844,-81.70250],
                    [41.49799,-81.70208],
                    [41.49774,-81.70187],
                    [41.49766,-81.70176],
                    [41.49733,-81.70130],
                    [41.49705,-81.70099],
                    //settlers landing
                    [41.49643,-81.70046],
                    [41.49594,-81.70004],
                    [41.49582,-81.69979],
                    [41.49577,-81.69958],
                    [41.49577,-81.69943],
                    //combines with redline
                    [41.49583,-81.69914]
                ];

                var greenlinecoords = [
                    //at split from redline
                    [41.48354,-81.64303],
                    [41.48357,-81.64243],
                    [41.48356,-81.64219],
                    [41.48353,-81.64182],
                    [41.48351,-81.64158],
                    [41.48336,-81.64090],
                    [41.48309,-81.64024],
                    [41.48303,-81.64008],
                    //e75th
                    [41.48108,-81.63635],
                    [41.48084,-81.63576],
                    [41.48068,-81.63499],
                    [41.48063,-81.63431],
                    [41.48067,-81.63339],
                    [41.48074,-81.63290],
                    //e83rd
                    [41.48158,-81.62885],
                    [41.48207,-81.62655],
                    [41.48267,-81.62422],
                    [41.48277,-81.62380],
                    [41.48282,-81.62338],
                    [41.48283,-81.62301],
                    [41.48273,-81.62019],
                    [41.48270,-81.61921],
                    //buckeye woodhill
                    [41.48271,-81.61862],
                    [41.48277,-81.61811],
                    [41.48285,-81.61747],
                    [41.48341,-81.61351],
                    [41.48399,-81.60933],
                    [41.48405,-81.60850],
                    [41.48409,-81.60767],
                    [41.48411,-81.60694],
                    //e116th st lukes
                    [41.48409,-81.60347],
                    [41.48404,-81.59831],
                    [41.48400,-81.59331],
                    [41.48399,-81.59296],
                    [41.48398,-81.59235],
                    //shaker square
                    [41.48394,-81.59149],
                    //at split
                    [41.48381,-81.58922],
                    [41.48369,-81.58771],
                    [41.48330,-81.58457],
                    [41.48245,-81.57770],
                    [41.48172,-81.57193],
                    [41.48089,-81.56530],
                    [41.48055,-81.56259],
                    [41.48041,-81.56185],
                    [41.48032,-81.56148],
                    [41.47998,-81.56062],
                    [41.47982,-81.56030],
                    [41.47930,-81.55932],
                    [41.47906,-81.55883],
                    //attleboro
                    [41.47900,-81.55871],
                    [41.47886,-81.55831],
                    [41.47867,-81.55765],
                    [41.47860,-81.55730],
                    [41.47851,-81.55616],
                    [41.47850,-81.55560],
                    [41.47850,-81.55366],
                    [41.47851,-81.55012],
                    [41.47852,-81.53689],
                    [41.47854,-81.52710],
                    [41.47856,-81.52062],
                    [41.47858,-81.51782]
                ];

                var bluelinecoords = [
                    //start at green line split
                    [41.48381,-81.58922],
                    [41.48377,-81.58892],
                    [41.48368,-81.58863],
                    [41.48362,-81.58853],
                    [41.48351,-81.58846],
                    [41.48334,-81.58840],
                    [41.48294,-81.58841],
                    [41.48271,-81.58841],
                    [41.48241,-81.58834],
                    //drexmore
                    [41.48213,-81.58819],
                    [41.48186,-81.58796],
                    [41.48154,-81.58761],
                    [41.47918,-81.58488],
                    [41.47586,-81.58106],
                    [41.47229,-81.57694],
                    //ashby
                    [41.46859,-81.57270],
                    [41.46818,-81.57218],
                    [41.46781,-81.57164],
                    [41.46742,-81.57092],
                    [41.46721,-81.57044],
                    [41.46697,-81.56976],
                    [41.46674,-81.56882],
                    [41.46663,-81.56804],
                    [41.46660,-81.56755],
                    [41.46660,-81.56648],
                    //lee van aken
                    [41.46660,-81.56538],
                    [41.46661,-81.55929],
                    [41.46661,-81.55371],
                    [41.46662,-81.54607],
                    [41.46662,-81.54007],
                    //farnsleigh
                    [41.46662,-81.53966],
                    [41.46659,-81.53932],
                    [41.46650,-81.53906],
                    [41.46630,-81.53867],
                    [41.46592,-81.53795]
                ];

                var blueline = L.polyline(bluelinecoords, {color: '#09b068'}).addTo(map);
                var waterfront = L.polyline(waterfrontcoords, {color: '#09b068'}).addTo(map);
                var greenline = L.polyline(greenlinecoords, {color: '#09b068'}).addTo(map);
                var redline = L.polyline(redlinecoords, {color: '#a60000'}).addTo(map);

                //define green and red line icons
                //var redarrowpng = <%= image_tag "redarrow.png" %>
                var redarrow = L.icon({
                    iconUrl: "<%= asset_path('redarrow.png') %>",
                    iconSize: [40, 40],
                    iconAnchor: [20, 20]
                });
                //var greenarrowpng = <%= image_tag "greenarrow.png" %>
                var greenarrow = L.icon({
                    iconUrl: "<%= asset_path('greenarrow.png') %>",
                    iconSize: [40, 40],
                    iconAnchor: [20, 20]
                });

                //create layergroup
                var markers = L.layerGroup().addTo(map);

                //add each db entry to the map
                <% @transits.each do |train| %>
                    <% if train.lat != nil && train.long != nil %>
                        var coords = <%= [train.lat, train.long] %>
                        <%if train.routeid == 66%>
                            //L.marker([coords[0], coords[1]], {icon: redarrow, rotationAngle: <%= train.bearing.to_i %>}).addTo(map);
                            //add marker to layergroup
                            L.marker([coords[0], coords[1]], {icon: redarrow, rotationAngle: <%= train.bearing.to_i %>}).addTo(markers);
                        <% else %>
                            //L.marker([coords[0], coords[1]], {icon: greenarrow, rotationAngle: <%= train.bearing.to_i %>}).addTo(map);
                            L.marker([coords[0], coords[1]], {icon: greenarrow, rotationAngle: <%= train.bearing.to_i %>}).addTo(markers);
                        <% end %>
                    <% end %>
                <% end %>

                setInterval(function() {
                    //clear old markers
                    markers.clearLayers();
                    //fetch updated positions from db
                    fetch("/transit/transitUpdate").then(res => res.json()).then(body=>{
                        //for each element readd the marker at new pos
                        body.forEach((ele) => {
                            if (ele["routeid"] == 66){
                                L.marker([ele["lat"], ele["long"]], {icon: redarrow, rotationAngle: ele["bearing"]}).addTo(markers);
                            } else {
                                L.marker([ele["lat"], ele["long"]], {icon: greenarrow, rotationAngle: ele["bearing"]}).addTo(markers);
                            }
                        }
                        );
                    });
                //update every n seconds
                }, 20 * 1000);

            </script>
        </div>
    </body>
</html>